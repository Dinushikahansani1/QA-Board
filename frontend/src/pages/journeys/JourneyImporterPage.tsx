import React, { useState } from 'react';
import { useNavigate, Link as RouterLink } from 'react-router-dom';
import {
  Box,
  Button,
  TextField,
  Typography,
  Paper,
  Alert,
  CircularProgress,
} from '@mui/material';
import { ArrowBack } from '@mui/icons-material';
import { importJourney } from '../../api/journeys';

const placeholderCode = `// Paste code generated by Playwright Codegen here
// Example:
//
// import { test, expect } from '@playwright/test';
//
// test('test', async ({ page }) => {
//   await page.goto('https://www.saucedemo.com/');
//   await page.getByRole('textbox', { name: 'Username' }).fill('standard_user');
//   await page.getByRole('textbox', { name: 'Password' }).fill('secret_sauce');
//   await page.getByRole('button', { name: 'Login' }).click();
//   await expect(page.locator('#inventory_container')).toBeVisible();
// });
`;

export default function JourneyImporterPage() {
  const navigate = useNavigate();
  const [name, setName] = useState('');
  const [code, setCode] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError(null);
    setLoading(true);
    try {
      await importJourney(name, code);
      navigate('/journeys');
    } catch (err: any) {
      const errorMsg = err.response?.data?.error || 'An unknown error occurred during import.';
      setError(errorMsg);
    } finally {
      setLoading(false);
    }
  };

  return (
    <Box sx={{ p: 3 }}>
      <Button component={RouterLink} to="/journeys" startIcon={<ArrowBack />} sx={{ mb: 2 }}>
        Back to Journeys
      </Button>
      <Paper sx={{ p: 3 }}>
        <Typography variant="h4" component="h1" sx={{ mb: 2 }}>
          Import Journey from Code
        </Typography>
        <Typography color="text.secondary" sx={{ mb: 3 }}>
          Run <code>npx playwright codegen &lt;your-url&gt;</code> on your local machine, perform the actions, and paste the generated code below.
        </Typography>
        {error && <Alert severity="error" sx={{ mb: 2 }}>{error}</Alert>}
        <Box component="form" onSubmit={handleSubmit}>
          <TextField
            label="Journey Name"
            fullWidth
            required
            value={name}
            onChange={(e) => setName(e.target.value)}
            sx={{ mb: 2 }}
          />
          <TextField
            label="Playwright Generated Code"
            fullWidth
            required
            multiline
            rows={15}
            value={code}
            onChange={(e) => setCode(e.target.value)}
            placeholder={placeholderCode}
            variant="outlined"
            inputProps={{ style: { fontFamily: 'monospace' } }}
          />
          <Box sx={{ mt: 2, display: 'flex', alignItems: 'center' }}>
            <Button type="submit" variant="contained" disabled={loading || !name || !code} sx={{ mr: 2 }}>
              Import and Create Journey
            </Button>
            <Button variant="outlined" onClick={() => navigate('/journeys')} disabled={loading}>
              Cancel
            </Button>
            {loading && (
              <CircularProgress
                size={24}
                sx={{
                  position: 'absolute',
                  top: '50%',
                  left: '50%',
                  transform: 'translate(-50%, -50%)',
                }}
              />
            )}
          </Box>
        </Box>
      </Paper>
    </Box>
  );
}
